#
# taskwarrior
#

# work around always defaulting to 80 columns when piping
# note: ${COLUMNS:-80} not needed, blank value is default (which is 80)
# todo: implement env var expansion in taskwarrior
# also: #991
#
task ()
{
	for arg; do if [[ $arg == '--' ]]; then break
	elif [[ $arg == '--version' ]]
	then `type -P task` --version; return; fi; done

	`type -P task` rc.defaultwidth=$COLUMNS "${@}"
}

# for taskadd
#
taskaddl () { TASKADD="$*"; } # additional args (such as tags)
taskprj () { TASKPRJ="$@"; } # default project

# look in the fields we use that have text, default is only description
# todo: should we also search label text? probably not since those are
# more like "named dimensions"
#
taskgrep ()
{
	has="$1"; shift;
	if [[ $has =~ (([[:alnum:]_-]+/)+)([[:alnum:]_-]+)$ ]]; then
		label=${BASH_REMATCH[3]}
		project=${BASH_REMATCH[1]}
		project=${project%/}
		project=${project//\//.}
		fqlfilter="or ( project:$project label:$label )"
	fi
	task \( \
		project.has:"$has" or \
		label.has:"$has" or \
		description.has:"$has" \
		$fqlfilter \
	\) "$@"
}

taskgc ()
{
	(($(task +DELETED _unique uuid | wc -l))) &&
		task rc.bulk=0 +DELETED purge
	task rc.gc=on rc.verbose=nothing // list >/dev/null
}

### timewarrior

taskstat ()
{
	local all
	[[ $1 == '-a' || $1 == '--all' ]] && { all=:all; shift; }
	timew summary "$@" :ids $all
}
