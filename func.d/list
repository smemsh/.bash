#

# TODO: very specific to me

# so we don't have to do it every time 'ls' is invoked,
# but just once upon sorting this file
# todo: set based on platform perhaps (via env)
# todo: also whether it's coreutils (this is why squelch below)
#
[[ $(ls --version &>/dev/null) =~ ([[:digit:]]+) ]] &&
	((${BASH_REMATCH[1]} >= 6))  &&
		export _BASHRC_HAS_LS_DIRSFIRST=1

__ls ()
{
	ls \
		-nhlAF \
		--color=always \
		--time-style=+$HISTTIMEFORMAT \
		${_BASHRC_HAS_LS_DIRSFIRST:+'--group-directories-first'} \
		"$@" |
	sed '/^total/d'
}

lsa ()
{
	__ls "$@" |
	less -ERX -+S
}

# lsa just files
lsf ()
{
	__ls "$@" |
	grep -A 0 '[^/]$' |
	less -ERX -+S
}

# lsa just dirs
lsd ()
{
	__ls "$@" |
	grep -B 0 '[^/]$' |
	less -ERX -+S
}

# try on $tododir/
# XXX make this work on $goassocdir/ also
#
lst  () { lstc $FUNCNAME "$@"; } # lists [files only] by time ...
lsc  () { lstc $FUNCNAME "$@"; } # ...or as godo *: otherwise *
lstc ()
{
	invocation_name=$1; shift

	ls -1Flt --color=never --time-style=+$HISTTIMEFORMAT "$@" |
	sed -e '/\/$/d' | sed -e '0,/^total/d' | # remove dirs and "total"
	awk '{print $6, $7}' | # date and name
	awk '{
		date = $1; print "foo", date;
		rest = $2; print "bar", rest;
			   print "baz";
		idxofdot = index(rest, ".");
		matched = substr(rest, 1, idxofdot);
		printf("%u %s\n", date, matched);
	}'
	sort -sk 2 | # get rid of same filename after strip
	uniq -f 1 | # dot and up to ':' only
	sort -nrk 1,2 # sort results by date
}


# all, long, unsorted, page
lsu ()
{
	ls -lAF --color=always --time-style=+$HISTTIMEFORMAT "$@" |
	less -ER
}

# lsa, wide, no dotfiles, useful in a home dir
lsh ()
{
	ls -CFw $COLUMNS --color=always "$@" |
	less -ERX
}

# lsa wide nopage; lsr instead of lsw for faster typing
lsr ()
{
	ls -CAF --color=always "$@" |
	less -ER
}

llatest ()
{
	ls -1t ${@} |
	head -1
}

loldest ()
{
	ls -1t ${@} |
	tail -1
}

# vim:syn=sh:
