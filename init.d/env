#
# - set up shell environment
# - only sourced for interactive shells
# - may assume $HOME, $LOGNAME, $USER set (see 'init.d/identity')
# - assumes setenv() et al are available (see './setenv')
#
# TODO: should we also be sourced for non-interactive?
# TODO: factor some/all of this out into ~/.bash/env.d/
#

export LINES
export COLUMNS

unset MAIL MAILPATH MAILCHECK

# this gets week numbers correct, such as with 'ncal' output
# NOTE: $LANG set in 'rc' (needs to be set prior to most things)
# TODO: consider using LANG=C.UTF-8 but this has sorting implications
#
export LC_TIME=C

esetenv HOSTFILE			~/var/bash/hostfile
esetenv PROMPT_COMMAND			'prompt_command $?'

# TODO: this is really just a readlink of /proc/self/fd/0
# (but that only works on linux), maybe we want this in OS-specific
#
esetenv TERMINAL			$(tty)

# TODO: why does gpg2 not simply use ttyname(STDIN_FILENO)?
#
esetenv GPG_TTY				$TERMINAL

# this can occur in a chroot with different kinds of bind mounts
# in which case it can be /any/path/leading/to/dev/ttyfoo
#
esetenv TERMINAL			${TERMINAL##*/dev/}

###

psetenv shell_init_path_generic		\
	/usr/local/bin			\
	/bin				\
	/usr/bin			\
	/usr/local/sbin			\
	/sbin				\
	/usr/sbin			\
;
psetenv LD_LIBRARY_PATH			\
	$HOME/lib			\
	/usr/local/lib			\
;

psetenv GOPATH				\
	$HOME/go			\
;

# XXX TODO: hack for macports, not sure why it installs like this
# XXX UPDATE: now getting segfaults *with* it, removing for now
#
#psetenv PERLLIB						\
#	/opt/local/lib/perl5/vendor_perl/5.16.1/darwin-thread-multi-2level \
#	/opt/local/lib/perl5/vendor_perl		\
#	/opt/local/lib/perl5/vendor_perl/5.16.1		\
#	/usr/local/lib/perl5/site_perl/5.8.8		\
#	/usr/local/lib/perl5/vendor_perl/5.8.8		\
#	/usr/local/lib/perl5/vendor_perl/5.8.8		\
#;
# XXX UPDATE: adding some back for linux/omnius
#
esetenv PERLLIB \
	/usr/local/lib/perl5/site_perl/5.8.8: \
	/usr/local/lib/perl5/vendor_perl/5.8.8 \
;

# python virtualenv likes to monkey with our prompt
#
esetenv VIRTUAL_ENV_DISABLE_PROMPT=1

###

# grep 2.9 default on fedora 15 manual page says:
# ms=01;31:mc=01;31:sl=:cx=:fn=35:ln=32:bn=32:se=36
# XXX TODO option to output default or add to --version, upstream
#
# sl: selected lines
# cx: context lines
# mt: matched
# ms: selected (huh? diff with mt?)
# mc: context line
# fn: filenames when -l
# ln: line numbers when -n
# bn: byte offsets when -b
# se: separators
#
psetenv GREP_COLORS \
	sl= \
	cx= \
	ms=01\;31 \
	mc=01\;31 \
	fn=01\;36 \
	ln=32 \
	bn=32 \
	se=36 \
;

###

esetenv TIMEFORMAT		"time: %0Rs"

# overridden later if vim found
#
esetenv VISUAL			vi
esetenv EDITOR			$VISUAL

esetenv BROWSER			elinks

esetenv COMP_WORDBREAKS		"${COMP_WORDBREAKS/:/}"
esetenv BLOCK_SIZE		human-readable		# df, du, ls

esetenv RI			"-f ansi"		# ruby rdoc ri

esetenv LYNX_CFG		$HOME/.lynxrc

esetenv GDBHISTFILE		$HOME/.gdb_history	# uses cwd if not set

esetenv LESS			"-iSQRF#3"
esetenv PAGER			"less"
esetenv MANPAGER		"$PAGER -s"
esetenv MANWIDTH		80
esetenv MANHTMLPAGER		elinks			# man2html

esetenv PDSH_RCMD_TYPE		ssh
esetenv PDSH_MISC_MODULES	netgroup
esetenv PDSH_REMOTE_PDCP_PATH	/usr/bin/pdcp		# ours is /usr/local
esetenv SSH_ASKPASS		/bin/true		# for pdsh
esetenv FANOUT			384		       # -f NNNN
#esetenv FANOUT			 9999 # see github.com/chaos/pdsh #123

# TODO: what is this and why?
esetenv NCURSES_NO_PADDING	1
esetenv NCURSES_NO_SETBUF	1

esetenv ORACLE_BASE		/var/oracle
esetenv ORACLE_HOME		/opt/oracle/9i
esetenv ORACLE_OWNER		oracle
esetenv PGUSER			postgres

esetenv LDAPTLS_CACERT		$HOME/.cacerts

# now using separate pki user and ~pki --smm20150209114221
# TODO: remove once this stabilizes
#
#esetenv EASYRSA_PKI		$HOME/pki
#esetenv EASYRSA_VARS_FILE	$HOME/.pki/easy/rc

###

# man-db uses 'col' in pipe, which breaks pinfo
#
esetenv MAN_KEEP_FORMATTING		1

# we want our git env carefully constructed by only ourselves
#
esetenv GIT_CONFIG_NOSYSTEM		1

# disables gtk3 warning when cannot reach dbus accessibility service
#
esetenv NO_AT_BRIDGE			1

# rather than make a ~root/.ssh/config just for rsyncing
# TODO find better place for this, perhaps ~root/ is better
#
esetenv RSYNC_RSH			ssh

# TODO https://github.com/wofr06/lesspipe
type -p lesspipe.sh &>/dev/null &&
esetenv LESSOPEN			"|lesspipe.sh %s"

# because our PS1 has a newline, see upstream PR 514
esetenv LESS_ONESCREEN_OFFSET		1

# tell redhat tools (eg 'service') not to use dbus and not to
# use systemd and to stop dbus from launching automatically
#
#psetenv DBUS_SESSION_BUS_ADDRESS	:${USER:?}@${HOSTNAME:?}
esetenv SYSTEMCTL_SKIP_REDIRECT		1

# make 'gcal' format dates correctly
#
esetenv GCAL \
	"--starting-day=mon " \
	"--with-week-number " \
	"--iso-week-number=yes " \
;

esetenv LIBGUESTFS_CACHEDIR		/var/cache/libguestfs


# for android Studio to display windows properly with ratpoison
esetenv _JAVA_AWT_WM_NONREPARENTING	1

# taskwarrior / timewarrior
source ~/.taskenv 2>/dev/null

##############################################################################

shell_init_arch_specific ()
{
	case `uname -s` in # TODO: use HOSTTYPE, MACHTYPE, OSTYPE

	(Linux) #########################

	psetenv AWT_TOOLKIT		\
		MToolkit		\
	;
	psetenv XDG_RUNTIME_DIR		\
		/run/user/${UID:?}	\
	;
	;;

	(SunOS) #########################

	psetenv shell_init_path_post	\
		/usr/openwin/bin	\
		/usr/ccs/bin		\
		/usr/ucb		\
	;
	psetenv LD_LIBRARY_PATH		\
		$LD_LIBRARY_PATH	\
		/usr/openwin/lib	\
	;
	;;

	(HP-UX) #########################

	psetenv shell_init_path_post	\
		/usr/contrib/bin	\
		/opt/sudo/bin		\
		/opt/tusc/bin		\
		/usr/local/pa20_64/bin	\
	;
	;;

	(CYGWIN*) #######################

	psetenv shell_init_path_post	\
		/usr/X11R6/bin		\
		;
	psetenv LD_LIBRARY_PATH		\
		$LD_LIBRARY_PATH	\
		/usr/X11R6/lib		\
		;
	psetenv PAGER			"${PAGER}C"
	psetenv MANPAGER		"${MANPAGER}C"

	;;

	(Darwin) ########################

	psetenv shell_init_path_pre		\
		/opt/local/libexec/gnubin	\
	;
	# todo: this probably should be in the generic path, not
	# Darwin-specific.  possibly, nodejs stuff should be in a globally
	# accessible path.  but then there's xyz language and where those
	# binaries are installed... maybe these links should all end up in
	# ~/bin/, but that doesn't allow easy separation of local code and
	# upstream code
	#
	# todo: this should not be here, maybe eg PYTHONPATH, etc
	#
	psetenv shell_init_path_post		\
		$HOME/node_modules/.bin		\
		$HOME/Library/Python/2.7/bin	\
	;
	;;

	esac
}

shell_init_path ()
{
	psetenv PATH				\
		$HOME/bin			\
		$HOME/.local/bin		\
		$shell_init_path_pre		\
		$shell_init_path_generic	\
		$shell_init_path_post		\
	;
}

shell_init_vim ()
{
	local base vim

	# check for a .../share/vim/ in common locations it
	# might be installed
	#
	for base in \
		${HOME:?} \
		/usr/local \
		/opt/local \
		/usr \
		;
	do
		vim=$base/share/vim
		test -d $vim &&
			break
	done

	# if we found it, glob the version number dirs, find
	# the latest by lex sort, and set up environment to use it
	#
	if (($? == 0)); then
		set -- $vim/vim[[:digit:]]* || return
		export VIM=${!#}
		export VISUAL=vim
		export EDITOR=$VISUAL
	fi
}

shell_init_bc ()
{
	esetenv BC_ENV_ARGS "-ql "
	local bcbase="$HOME/.bc"
	if test -d "$bcbase"
	then esetenv BC_ENV_ARGS \
		"$BC_ENV_ARGS " \
		"$bcbase/rc.bc " \
		"$bcbase/extensions.bc " \
	; fi
}

source ~/.bash/initfuncs

# TODO: should we unset esetenv() and setenv() too? does it mean
# they won't get re-defined later from libsh?
#
unset -f psetenv
